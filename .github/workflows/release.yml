name: Release

on:
  push:
    tags:
      - '*.*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          check-latest: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          cache-image: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.25.2/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install Linode CLI
        run: |
          python -m pip install --upgrade pip
          pip --version
          pip install setuptools
          pip install linode-cli --upgrade

      - name: Prepare git
        env:
          GITHUB_USER: 1gtm
          GITHUB_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
        run: |
          set -x
          git config --global user.name "${GITHUB_USER}"
          git config --global user.email "${GITHUB_USER}@appscode.com"
          git config --global \
            url."https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com".insteadOf \
            "https://github.com"

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          sudo mv bin/hub /usr/local/bin

      - name: Install yq
        run: |
          curl -fsSL -o yqq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yqq
          sudo mv yqq /usr/local/bin/yqq
          pipx install yq

      - name: Install Hugo
        run: |
          curl -fsSL -o hugo_extended.deb https://github.com/gohugoio/hugo/releases/download/v0.111.1/hugo_extended_0.111.1_linux-amd64.deb
          sudo dpkg -i hugo_extended.deb

      - name: Install Hugo Tools
        run: |
          curl -fsSL -o hugo-tools https://github.com/appscodelabs/hugo-tools/releases/download/v0.2.23/hugo-tools-linux-amd64
          chmod +x hugo-tools
          sudo mv hugo-tools /usr/local/bin/hugo-tools

      - name: Publish to GitHub Container Registry
        env:
          REGISTRY: ghcr.io/appscode
          DOCKER_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
          USERNAME: 1gtm
          GITHUB_USER: 1gtm
          GITHUB_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
        run: |
          docker login ghcr.io --username ${USERNAME} --password ${DOCKER_TOKEN}
          npm install
          make release

      - name: Deploy to QA
        env:
          REGISTRY: ghcr.io/appscode
          NINJA_KUBECONFIG: ${{ secrets.NINJA_KUBECONFIG }}
          ENFORCE_LICENSE: true
        run: |
          echo "connect to cluster"
          mkdir -p ~/.kube
          echo ${NINJA_KUBECONFIG} > ~/.kube/config
          kubectl get nodes
          make deploy-to-linode
