name: Deploy

on:
  workflow_dispatch:
    inputs:
      cluster:
        description: 'Cluster'
        required: true
        type: choice
        options:
          - ninja
          - prod
      version:
        description: 'Tag'
        # required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          check-latest: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Linode CLI
        run: |
          python -m pip install --upgrade pip
          pip --version
          pip install setuptools
          pip install linode-cli --upgrade

      - name: Install kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.25.2/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install yq
        run: |
          curl -fsSL -o yqq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yqq
          sudo mv yqq /usr/local/bin/yqq
          pipx install yq

      - name: Install Hugo
        run: |
          curl -fsSL -o hugo_extended.deb https://github.com/gohugoio/hugo/releases/download/v0.111.1/hugo_extended_0.111.1_linux-amd64.deb
          sudo dpkg -i hugo_extended.deb

      - name: Install Hugo Tools
        run: |
          curl -fsSL -o hugo-tools https://github.com/appscodelabs/hugo-tools/releases/download/v0.2.23/hugo-tools-linux-amd64
          chmod +x hugo-tools
          sudo mv hugo-tools /usr/local/bin/hugo-tools

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1

      - name: Deploy
        env:
          REGISTRY: ghcr.io/appscode
          CLUSTER: ${{ inputs.cluster }}
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
          NINJA_KUBECONFIG: ${{ secrets.NINJA_KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "connect to $CLUSTER cluster"
          if [ "$CLUSTER" = "prod" ]; then
            linode-cli lke kubeconfig-view 326609 --json | jq -r .[0].kubeconfig | base64 -d > ~/.kube/config
          else
            echo ${NINJA_KUBECONFIG} > ~/.kube/config
          fi
          kubectl get nodes
          echo "deploy docker image"
          make deploy-to-linode TAG=${{ inputs.version }}
